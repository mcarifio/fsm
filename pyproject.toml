# pyproject.toml describes this project ${tool.poetry.name}
# poetry's take on it: https://python-poetry.org/docs/pyproject/
# python's take on it:

[tool]
[tool.poetry]
name = "fsm"
version = "0.1.0"
description = "fsm, the federated software manager"
authors = ["Mike Carifio <mike@carif.io>"]
readme = "README.md"
homepage = "https://github.com/mcarifio/fsm" ## TODO mike@carif.io: use gh gist.io
repository = "https://github.com/mcarifio/fsm" ## see [[tool.poetry.source]]
documentation = "https://docs.readthedocs.io/fsm/en/stable/"  ## TODO mike@carif.io: populate this url from github docs.
classifiers=[
    'Development Status :: 2 - Pre-Alpha',
    'Intended Audience :: Developers',
    'Natural Language :: English',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.10',
]
# installed in poetry venv as ${tool.poetry.name}
packages = [ { include = "fsm" } ] #, { exclude = [ "*.pyc", ] } ]


# [tools.poetry.include]
# files =  [ "*.toml", "*.md" ]




# poetry install # install dependencies
# poetry update # install changes, update poetry.lock
[tool.poetry.dependencies] # see [tool.doc.poetry.dependencies] for doc urls
# The python type statement for type aliases arrives with python 3.10, enum.NamedDict() in 3.13.
python = ">=3.10,<4"
toml = "*"
networkx = "*"
fire = "*"
pydantic = "*"
# TODO mike@carif.io: airflow https://airflow.apache.org/ instead?
invoke = "*"
httpx = "*"
# aoihttp = "*"
python-box = "*"

[tool.poetry.dev-dependencies] # see [tool.doc.poetry.dev-dependencies] for doc urls
bumpversion = "*"
coverage = "*"
flake8 = "*"
pylint = "*"
pytest = "*"
black = "*"
pytest-cov = "*"
isort = "*" # organize imports
pyscaffold = "*" # project scaffolding

# [tool.doc.*] custom toml sections to capture doc urls
[tool.doc.poetry.dependencies]
toml = ["", "https://toml.io/en/"]
networkx = [ "https://networkx.org/documentation/stable/reference/",
    "https://networkx.org/documentation/stable/reference/algorithms/generated/networkx.algorithms.traversal.depth_first_search.dfs_postorder_nodes.html", ]
fire = [ "https://google.github.io/python-fire/guide/", ]
pydantic = [ "https://docs.pydantic.dev/latest/", ]
invoke = [ "https://www.pyinvoke.org/", ]
httpx = [ "https://www.python-httpx.org/", ]
python-box = [ "https://github.com/cdgriffith/Box", ]

[tool.doc.poetry.dev-dependencies]
bumpversion = [ "https://pypi.org/project/bumpversion/", ]
coverage = [ "https://coverage.readthedocs.io/en/coverage-5.5/", ]
flake8 = [ "https://flake8.pycqa.org/en/latest/", ]
pylint = [ "https://pylint.pycqa.org/en/latest/", ]
pytest = [ "https://docs.pytest.org/en/latest/", ]
pytest-cov = [ "https://pytest-cov.readthedocs.io/en/latest/", ]
black = [ "https://black.readthedocs.io/en/stable/", ]
isort = [ "https://pycqa.github.io/isort/", ]
pyscaffold = [ "https://pyscaffold.org/en/stable/", ]






[tool.poetry.scripts]
# poetry run {pkg,graph,...}
pkg = "fsm.pkg:main"
graph = "fsm.graph:main"
repo = "fsm.repo:main"
resolver = "fsm.resolver:main"
client = "fsm.client:main"
# format = "black:main"  ## run the installed version of black: `poetry run black .`
# pwd = "echo ${PWD}"
# pyenv = "curl -sSL https://raw.githubusercontent.com/pyenv/pyenv-installer/master/bin/pyenv-installer | PYENV_ROOT=bin bash "

[build-system]
requires = [ "poetry-core>=1.0.0" ]
build-backend = "poetry.masonry.api"

# [tool.isort]
# profile = "black"

[tool.black]
line-length = 120

[tool.isort]
profile = "black"
# line_length = 120
include_trailing_comma = true
force_single_line = false
multi_line_output = 3
known_first_party = ["fsm"]
# known_third_party = ["django", "numpy", "requests"]
# sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
# default_section = "THIRDPARTY"


# for pipx
[project.scripts]
# python -m pipx run git+https://github.com/mcarifio/fsm fsm
fsm = "fsm.cli:main"

[project.gui-scripts]
# python -m pipx run git+https://github.com/mcarifio/fsm fsm
fsmgui = "fsm.gui:main"


